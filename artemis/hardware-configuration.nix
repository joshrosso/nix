# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{

  # Pin to a specific kernel version (keep this block around for future ref)
  # Current need is that 6.7.2+ broke compatibility with Nvidia drivers
  # https://forums.developer.nvidia.com/t/linux-6-7-3-545-29-06-550-40-07-error-modpost-gpl-incompatible-module-nvidia-ko-uses-gpl-only-symbol-rcu-read-lock/280908/6
  #boot.kernelPackages = pkgs.linuxPackagesFor (pkgs.linux_6_7.override {
  #  argsOverride = rec {
  #    src = pkgs.fetchurl {
  #          url = "mirror://kernel/linux/kernel/v6.x/linux-${version}.tar.xz";
  #          sha256 = "sha256-Hs/6Vo6GoiArpVM62QNLwmOpqhThiVl6lPCbOFStaMM=";
  #    };
  #    version = "6.7.1";
  #    modDirVersion = "6.7.1";
  #    };
  #});


  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  hardware.bluetooth.enable = true;

  # disables tap-to-click on laptop trackpad.
  services.xserver.libinput.touchpad.tapping = false;

  # settings recommended by https://nixos.wiki/wiki/Nvidia#Modifying_NixOS_Configuration
  # offload ensures best battery life, only uses the gpu when specifically instructed to.
  # see https://nixos.wiki/wiki/Nvidia#Optimus_PRIME_Option_A:_Offload_Mode for details.
  hardware.nvidia = {
    powerManagement.enable = true;
    modesetting.enable = true;
    #powerManagement.finegrained = true;
    prime = {
      # Bus ID of the NVIDIA GPU. You can find it using lspci
      nvidiaBusId = "PCI:1:0:0";
      # Bus ID of the Intel GPU. You can find it using lspci
      intelBusId = "PCI:0:2:0";
      offload = {
        #enable = true;
        #enableOffloadCmd = true;
      };
      sync.enable = true;
    };
    nvidiaSettings = true;
    package = config.boot.kernelPackages.nvidiaPackages.stable;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/05025b88-77e1-4661-b0a8-a5eedc45a3a9";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/9697-91D4";
    fsType = "vfat";
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/768e138d-96e2-4a42-be39-9934cdf1bf20"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
